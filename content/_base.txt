# Base terms  of knoladge base
term
relation
object
subject
isa
akindof

!rule
    $A isa $B
    $B isa $C
!conclusion
    $A isa $C
!rule-end

# Мысли о деревьях поведения
# !behaviour tag
#   Дерево поведения в отличае от факта исполняется единожды.
#   Факт применяется пока не будут найдены все выводы... Хотя возможно возникновение цикличных правил
#
#   Дерево поведения как и обычная программа может иметь команды и ветвления
#   Кроме того оно может содержать в себе факты (как и обычные правила)
#   например:
#
#   !do-something                       # Выполнит некоторое внешнее действие
#   !cond pattern with $variable        # Выполнит поиск и если найдёт совпадение, то блок будет исполняться
#       variable value is $variable     # добавит
#   !cond-end
#
#   !each pattern with $variable        # аналогично cond выполнит поиск совпадений, но блок выполниться для КАЖДОГО совпадения
#       !do-something with $variable
#   !each-end
#
#   Как и любое дерево поведения - оно имеет основные условные блоки:
#   !sequence       # выполняет команды последовательно пока одна из команд не вернет ошибку или команды не кончатся
#       !command-1
#       !command-2
#       !command-3
#   !sequence-end
#
#   !selector       # выполняет команды последовательно пока одна из команд не вернет успешное завершение или команды не кончатся
#       !command-1
#       !command-2
#       !command-3
#   !selector-end
#
#   Конечно ещё нужно продумать как быть с типами данных.
#   Хотелось бы что бы такой код умел работать не только с фактами но и с числами
#
#   И не плохо бы подумать и о других конструкциях
#
#   А ещё как и у всех баз знаний тут остаётся вопрос о том, как поступать с анти-фактами
#   Gleb isa Human
#   Gleb isnot Human
#   Факты противоречат друг другу. Кого-то нужно вычеркнуть?
#
#   Ну или нужно ввести понятие достоверности факта и правила вывода достоверности.
#
#
# !behaviour-end
#